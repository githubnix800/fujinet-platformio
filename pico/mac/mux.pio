;
; FujiNet Project
;
; Vintage Macintosh Microfloppy Controller Interface
; selects output pins between RMT, TACH and LATCH
;
;

.program mux
.side_set 3 opt pindirs      
.wrap_target     
start:
    jmp pin next4
    in pins, 4
    out pindirs, 3
    .wrap
next4:
    jmp start       side 0b000  ; enable high (not enabled)
    nop                     ; need to pad a couple instructions to make it same length as floppy mux
    nop
    nop
    nop
    nop
    nop
    nop
    nop

% c-sdk {
// this is a raw helper function for use by the user which sets up the GPIO input and output, and configures the SM to output on a particular pin

void mux_program_init(PIO pio, uint sm, uint offset, uint in_pin, uint mux_pin) {
   // configure a SM
   pio_sm_config c = mux_program_get_default_config(offset);
   // config side set
   sm_config_set_sideset_pins(&c, mux_pin);
   sm_config_set_out_pins(&c, mux_pin, 3);
   sm_config_set_in_pins(&c, in_pin); 
   sm_config_set_jmp_pin(&c, in_pin-1);
   // there are 4 wires to read for latch mux, shift to the right, no autopull
   sm_config_set_in_shift(&c, false, true, 4);
   sm_config_set_out_shift(&c, true, true, 3);
   for (int i=0; i<3; i++)
      pio_gpio_init(pio, mux_pin + i);
   pio_sm_set_consecutive_pindirs(pio, sm, mux_pin, 3, false);
   // initialize
   pio_sm_init(pio, sm, offset, &c);
}
%}